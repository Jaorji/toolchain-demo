version: '2'
default_locale: en
locales:
  $ref: locales.yml
template:
  name: Microservices toolchain with DevOps Insights
  description: |-
    With this cloud-native toolchain, you use a sample to create an online store that consists of
    three microservices: a Catalog API, an Orders API, and a UI that calls both of the APIs. The 
    toolchain is preconfigured for continuous delivery, source control, functional testing, issue
    tracking, online editing, and alert notification.
    
    The Catalog and Orders API are backed by a Cloudant store. As part of deploying this application,
    a no-cost Cloudant service instance is created. For more information and terms, see the [Bluemix
    catalog](https://console.ng.bluemix.net/catalog/services/cloudant-nosql-db/).
    
    This toolchain uses tools that are part of the Continuous Delivery service. If an instance of that
    service isn't already in your organization, when you click **Create**, it is automatically added at no
    cost to you. For more information and terms, see the
    [Bluemix catalog](https://console.ng.bluemix.net/catalog/services/continuous-delivery/).
    
    To get started, click **Create**.
  header: '![](toolchain.svg?localize)'
  icon: icon.svg
  required:
    - ui-build
    - catalog-api-build
    - orders-api-build
    - catalog-api-repo
    - orders-api-repo
    - ui-repo
  info:
    git url: >-
      [https://github.com/open-toolchain/toolchain-demo](https://github.com/open-toolchain/toolchain-demo)
    git branch: '[master](https://github.com/open-toolchain/toolchain-demo/tree/master)'
toolchain:
  name: 'toolchain-demo-{{timestamp}}'
  template:
    getting_started: |-
      **Your toolchain is ready!**

      **Quick start:** Commit a change to a Git repo to trigger a new build and deployment of one of the microservices. See results in the Deployment Risk dashboard in DevOps Insights.
      
      For step-by-step instructions, see the [tutorial](https://www.ibm.com/devops/method/tutorials/tutorial_toolchain_microservices)
      for this toolchain.
services:
  orders-api-build:
    service_id: pipeline
    parameters:
      services:
        - orders-api-repo
        - test
      name: 'orders-api-{{toolchain.name}}'
      configuration:
        content:
          $text: order-api.pipeline.yml
        env:
          DEV_REGION_ID: '{{form.pipeline.parameters.dev-region}}'
          SAUCE_LABS: test
          LOGICAL_APP_NAME: Store Orders API
          CF_APP_NAME: '{{form.pipeline.parameters.orders-app-name}}'
          DEV_SPACE_NAME: '{{form.pipeline.parameters.dev-space}}'
          DEV_ORG_NAME: '{{form.pipeline.parameters.dev-organization}}'
          ORDER_API_REPO: orders-api-repo
          QA_SPACE_NAME: '{{form.pipeline.parameters.qa-space}}'
          QA_ORG_NAME: '{{form.pipeline.parameters.qa-organization}}'
          QA_REGION_ID: '{{form.pipeline.parameters.qa-region}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
        execute: true
  catalog-api-repo:
    service_id: githubpublic
    parameters:
      repo_name: '{{form.githubpublic.parameters.catalog-api-repo_name}}'
      repo_url: '{{form.githubpublic.parameters.catalog-api-repo_url}}'
      type: clone
      has_issues: false
  ui-repo:
    service_id: githubpublic
    parameters:
      repo_name: '{{form.githubpublic.parameters.ui-repo_name}}'
      repo_url: '{{form.githubpublic.parameters.ui-repo_url}}'
      type: clone
      has_issues: true
  ui-build:
    service_id: pipeline
    parameters:
      services:
        - ui-repo
        - test
      name: 'ui-{{toolchain.name}}'
      ui-pipeline: true
      configuration:
        content:
          $text: ui.pipeline.yml
        env:
          DEV_REGION_ID: '{{form.pipeline.parameters.dev-region}}'
          SAUCE_LABS: test
          LOGICAL_APP_NAME: Store UI
          CF_APP_NAME: '{{form.pipeline.parameters.ui-app-name}}'
          DEV_SPACE_NAME: '{{form.pipeline.parameters.dev-space}}'
          DEV_ORG_NAME: '{{form.pipeline.parameters.dev-organization}}'
          UI_REPO: ui-repo
          QA_SPACE_NAME: '{{form.pipeline.parameters.qa-space}}'
          QA_ORG_NAME: '{{form.pipeline.parameters.qa-organization}}'
          QA_REGION_ID: '{{form.pipeline.parameters.qa-region}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
        execute: true
  catalog-api-build:
    service_id: pipeline
    parameters:
      services:
        - catalog-api-repo
        - test
      name: 'catalog-api-{{toolchain.name}}'
      configuration:
        content:
          $text: catalog-api.pipeline.yml
        env:
          DEV_REGION_ID: '{{form.pipeline.parameters.dev-region}}'
          SAUCE_LABS: test
          LOGICAL_APP_NAME: Store Catalog API
          CF_APP_NAME: '{{form.pipeline.parameters.catalog-app-name}}'
          DEV_SPACE_NAME: '{{form.pipeline.parameters.dev-space}}'
          DEV_ORG_NAME: '{{form.pipeline.parameters.dev-organization}}'
          CATALOG_API_REPO: catalog-api-repo
          QA_SPACE_NAME: '{{form.pipeline.parameters.qa-space}}'
          QA_ORG_NAME: '{{form.pipeline.parameters.qa-organization}}'
          QA_REGION_ID: '{{form.pipeline.parameters.qa-region}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
        execute: true
  orders-api-repo:
    service_id: githubpublic
    parameters:
      repo_name: '{{form.githubpublic.parameters.orders-api-repo_name}}'
      repo_url: '{{form.githubpublic.parameters.orders-api-repo_url}}'
      type: clone
      has_issues: false
  messaging:
    service_id: slack
    $ref: slack.yml
  dra:
    service_id: draservicebroker
    $ref: dra.yml
  test:
    service_id: saucelabs
    $ref: saucelabs.yml
  alerting:
    service_id: pagerduty
    $ref: pagerduty.yml
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      dev-space: dev
      qa-space: qa
      prod-space: prod
      orders-app-name: '{{services.orders-api-repo.parameters.repo_name}}'
      catalog-app-name: '{{services.catalog-api-repo.parameters.repo_name}}'
      ui-app-name: '{{services.ui-repo.parameters.repo_name}}'
    schema:
      $ref: deploy.json
  githubpublic:
    parameters:
      catalog-api-repo_name: 'catalog-api-{{toolchain.name}}'
      catalog-api-repo_url: 'https://github.com/open-toolchain/Microservices_CatalogAPI'
      orders-api-repo_name: 'orders-api-{{toolchain.name}}'
      orders-api-repo_url: 'https://github.com/open-toolchain/Microservices_OrdersAPI'
      ui-repo_name: 'ui-{{toolchain.name}}'
      ui-repo_url: 'https://github.com/open-toolchain/Microservices_UI'
    schema:
      $ref: github.json
